"""make flag generic

Revision ID: 8730ba525c40
Revises: b29b6bd60669
Create Date: 2025-06-29 10:33:11.684335

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "8730ba525c40"
down_revision: Union[str, None] = "b29b6bd60669"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    entitytype_enum = sa.Enum("video", "sponsorship", name="entitytype", schema="dev")
    entitytype_enum.create(op.get_bind(), checkfirst=True)
    op.execute("""
        ALTER TABLE dev.flag
        ALTER COLUMN entity_flagged TYPE dev.entitytype
        USING entity_flagged::dev.entitytype
    """)
    op.drop_constraint(op.f("flag_sponsorship_id_fkey"), "flag", schema="dev", type_="foreignkey")
    op.drop_constraint(op.f("flag_video_id_fkey"), "flag", schema="dev", type_="foreignkey")
    op.drop_column("flag", "sponsorship_id", schema="dev")
    op.drop_column("flag", "video_id", schema="dev")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "flag", sa.Column("video_id", sa.UUID(), autoincrement=False, nullable=False), schema="dev"
    )
    op.add_column(
        "flag",
        sa.Column("sponsorship_id", sa.UUID(), autoincrement=False, nullable=False),
        schema="dev",
    )
    op.create_foreign_key(
        op.f("flag_video_id_fkey"),
        "flag",
        "video",
        ["video_id"],
        ["id"],
        source_schema="dev",
        referent_schema="dev",
    )
    op.create_foreign_key(
        op.f("flag_sponsorship_id_fkey"),
        "flag",
        "sponsorship",
        ["sponsorship_id"],
        ["id"],
        source_schema="dev",
        referent_schema="dev",
    )
    op.execute("""
        ALTER TABLE dev.flag
        ALTER COLUMN entity_flagged TYPE VARCHAR
        USING entity_flagged::text
    """)
    sa.Enum(name="entitytype", schema="dev").drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
